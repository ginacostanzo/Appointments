{"ast":null,"code":"var _jsxFileName = \"/Users/ginacostanzo/Coding/Appointment Planner/src/components/appointmentForm/AppointmentForm.js\";\nimport React from \"react\";\nimport { ContactPicker } from '../contactPicker/ContactPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = _ref => {\n  let {\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n  const handleDateChange = e => {\n    setDate(e.target.value);\n  };\n  const handleTimeChange = e => {\n    setTime(e.target.value);\n  };\n  const handleContactChange = e => {\n    setContact(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Appointment Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        value: title,\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        value: date,\n        min: getTodayString,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time\",\n        children: \"Time: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"time type=\",\n        time: true,\n        value: time,\n        onChange: handleTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n        contacts: contacts,\n        onChange: handleContactChange,\n        value: contact,\n        name: contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","ContactPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","_ref","contacts","title","setTitle","contact","setContact","date","setDate","time","setTime","handleSubmit","handleTitleChange","e","target","value","handleDateChange","handleTimeChange","handleContactChange","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","min","name","_c","$RefreshReg$"],"sources":["/Users/ginacostanzo/Coding/Appointment Planner/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n  }\r\n\r\n  const handleTimeChange = (e) => {\r\n    setTime(e.target.value);\r\n  }\r\n\r\n  const handleContactChange = (e) => {\r\n    setContact(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"title\">Appointment Title: </label>\r\n          <input id=\"title\" type=\"text\" value={title} onChange={handleTitleChange} />\r\n        <label htmlFor=\"date\">Date: </label>\r\n          <input id=\"date\" type=\"date\" value={date} min={getTodayString} onChange={handleDateChange} />\r\n        <label htmlFor=\"time\">Time: </label>\r\n          <input id=\"time type=\"time value={time} onChange={handleTimeChange} />\r\n        <ContactPicker contacts={contacts} onChange={handleContactChange} value={contact} name={contact} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}